{"version":3,"sources":["history.js","components/layout/Header/index.js","components/layout/Layout/index.js","components/routes/HomePage/index.js","fixtures.js","redux/todo-list.reducer.js","components/routes/TodoListPage/index.js","components/routes/CreateTodoListPage/index.js","components/Root.js","redux/index.js","App.js","serviceWorker.js","index.js"],"names":["createHistory","Header","react_default","a","createElement","className","NavLink","to","Component","Layout","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","children","props","layout_Header","HomePage","Layout_Layout","React","todoList","id","todo","status","CREATE_TODO","concat","CHANGE_TODO_STATUS","reducer","state","length","undefined","action","payload","type","objectSpread","toConsumableArray","Date","now","map","TodoListPage","handleClick","todoId","_this","changeTodoStatusAction","_this2","sort","b","toLowerCase","onClick","connect","CreateTodoListPage","handleChange","event","setState","target","trim","handleSubmit","preventDefault","createTodoAction","onSubmit","onChange","history","pure","Route","path","component","exact","store","createStore","combineReducers","defineProperty","router","connectRouter","todoListReducer","App","es","lib","components_Root","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7032760.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();\n","import {NavLink} from 'react-router-dom';\nimport React, {Component} from 'react';\n\nimport './style.css';\n\nclass Header extends Component {\n\n    static propTypes = {\n    };\n\n    render() {\n        return (\n            <header className=\"header\">\n                <NavLink to=\"/\" className=\"nav-link\">Home</NavLink>\n                <NavLink to=\"/todo-list\" className=\"nav-link\">Todo List</NavLink>\n                <NavLink to=\"/create-todo/\" className=\"nav-link\">Create Todo</NavLink>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\n\nimport './style.css';\nimport Header from \"../Header\";\n\nexport class Layout extends Component {\n\n    static propTypes = {\n        children: PropTypes.oneOfType([\n            PropTypes.arrayOf(PropTypes.node),\n            PropTypes.node\n        ]).isRequired,\n    };\n\n    render() {\n        const {children} = this.props;\n        return (\n            <div className=\"container\">\n                <Header className=\"header\"/>\n                <div className=\"main\">\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport './styles.css';\nimport {Layout} from \"../../layout/Layout\";\n\nclass HomePage extends React.Component {\n    static propTypes = {};\n\n    render() {\n        return (\n            <Layout>\n                <h1>Home Page!</h1>\n            </Layout>\n        )\n    }\n}\n\nexport default HomePage;\n","export const todoList = [\n    {\n        \"id\": \"qwerqwer\",\n        \"todo\": \"Learn React\",\n        \"status\": 1\n    },\n    {\n        \"id\": \"lkjhsdlfkg\",\n        \"todo\": \"Learn Angular\",\n        \"status\": 0\n    },\n    {\n        \"id\": \"zxcvzcxvzxcv\",\n        \"todo\": \"Learn Node.js\",\n        \"status\": 0\n    }\n]\n","import { todoList } from '../fixtures';\nexport const MODULE_NAME = 'TODO-LIST';\n\nexport const CREATE_TODO = `${MODULE_NAME}/CREATE_TODO`;\nexport const CHANGE_TODO_STATUS = `${MODULE_NAME}/CHANGE_TODO_STATUS`;\n\nexport const createTodoAction = (value) => {\n    return {\n        type: CREATE_TODO,\n        payload: value\n    };\n}\n\nexport const changeTodoStatusAction = (id) => {\n    return {\n        type: CHANGE_TODO_STATUS,\n        payload: id\n    };\n}\n\nexport default function reducer(state = { todoList }, action) {\n    const { payload, type } = action;\n\n    switch (type) {\n        case CREATE_TODO:\n            return {\n                ...state,\n                todoList: [\n                    ...state.todoList,\n                    {\n                        id: Date.now(),\n                        todo: payload,\n                        status: 0\n                    }\n                ]\n            };\n\n        case CHANGE_TODO_STATUS:\n            return {\n                ...state,\n                todoList: [\n                    ...state.todoList\n                ].map(todo => {\n                    if (todo.id === payload) {\n                        todo.status = todo.status ? 0 : 1;\n                    }\n                    return todo;\n                })\n            };\n\n        default:\n            return state;\n    }\n}\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport './styles.css';\nimport { changeTodoStatusAction } from '../../../redux/todo-list.reducer';\nimport { Layout } from \"../../layout/Layout\";\nimport { MODULE_NAME as todoListModule } from '../../../redux/todo-list.reducer';\n\nclass TodoListPage extends React.Component {\n    static propTypes = {};\n\n    handleClick = (todoId) => {\n        this.props.changeTodoStatusAction(todoId);\n    }\n\n    render() {\n        const { todoList } = this.props;\n        todoList.sort((a, b) => {\n            if (a.status === b.status) {\n                if (a.todo.toLowerCase() === b.todo.toLowerCase()) {\n                    return 0;\n                }\n                return a.todo.toLowerCase() > b.todo.toLowerCase() ? 1 : -1;\n            }\n            return a.status > b.status ? 1 : -1;\n        });\n        return (\n            <Layout>\n                <h1>Todo List:</h1>\n                <ul>\n                    {todoList.map(todo => (\n                        <li className={todo.status && 'done'} key={todo.id} onClick={() => this.handleClick(todo.id)}>\n                            {todo.todo}\n                        </li>\n                    ))}\n                </ul>\n            </Layout >\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        todoList: state[todoListModule].todoList\n    }),\n    { changeTodoStatusAction }\n)(TodoListPage);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport './styles.css';\nimport { createTodoAction } from '../../../redux/todo-list.reducer';\nimport { Layout } from \"../../layout/Layout\";\n\nclass CreateTodoListPage extends React.Component {\n    static propTypes = {};\n\n    state = {\n        value: ''\n    };\n\n    handleChange = (event) => {\n        this.setState({ value: event.target.value.trim() });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (this.state.value) {\n            this.props.createTodoAction(this.state.value);\n            this.setState({ value: '' });\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <h1>Create New Todo</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </Layout>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    { createTodoAction }\n)(CreateTodoListPage);\n","import { connect } from \"react-redux\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport HomePage from './routes/HomePage';\nimport TodoListPage from './routes/TodoListPage'\nimport CreateTodoListPage from './routes/CreateTodoListPage'\n\nfunction Root() {\n    return (\n        <div>\n            <Route path=\"/create-todo\" component={CreateTodoListPage} />\n            <Route path=\"/todo-list\" component={TodoListPage} />\n            <Route exact path=\"/\" component={HomePage} />\n        </div>\n    );\n}\n\nRoot.propTypes = {\n};\n\nexport default connect(\n    null,\n    null,\n    null,\n    { pure: false }\n)(Root);\n","import { combineReducers, createStore } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport history from '../history';\nimport todoListReducer, { MODULE_NAME as todoListModule } from './todo-list.reducer';\n\nconst createRootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    [todoListModule]: todoListReducer\n});\n\n\nconst store = createStore(\n    createRootReducer(history)\n);\n\nexport default store;\n","import { ConnectedRouter } from 'connected-react-router';\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport './App.css';\nimport './config';\nimport history from './history';\nimport Root from './components/Root';\nimport store from './redux';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <Root />\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}